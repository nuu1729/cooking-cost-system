version: '3.8'

services:
  # MySQL データベース
  database:
    image: mysql:8.0
    container_name: cooking-cost-db
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: rootpassword
      MYSQL_DATABASE: cooking_cost_system
      MYSQL_USER: cooking_user
      MYSQL_PASSWORD: cooking_password
    volumes:
      - db_data:/var/lib/mysql
      - ./setup.sql:/docker-entrypoint-initdb.d/setup.sql
    ports:
      - "3306:3306"
    networks:
      - cooking-network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      timeout: 20s
      retries: 10

  # バックエンド API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile.dev
    container_name: cooking-cost-backend
    restart: unless-stopped
    environment:
      NODE_ENV: development
      PORT: 3001
      DB_HOST: database
      DB_USER: cooking_user
      DB_PASSWORD: cooking_password
      DB_NAME: cooking_cost_system
      FRONTEND_URL: http://localhost:3000
    volumes:
      - ./backend:/app
      - /app/node_modules
    ports:
      - "3001:3001"
    networks:
      - cooking-network
    depends_on:
      database:
        condition: service_healthy
    command: npm run dev

  # フロントエンド React
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev
    container_name: cooking-cost-frontend
    restart: unless-stopped
    environment:
      VITE_API_URL: http://localhost:3001/api
    volumes:
      - ./frontend:/app
      - /app/node_modules
    ports:
      - "3000:3000"
    networks:
      - cooking-network
    depends_on:
      - backend
    command: npm run dev

  # phpMyAdmin (データベース管理)
  phpmyadmin:
    image: phpmyadmin/phpmyadmin:latest
    container_name: cooking-cost-phpmyadmin
    restart: unless-stopped
    environment:
      PMA_HOST: database
      PMA_USER: root
      PMA_PASSWORD: rootpassword
    ports:
      - "8080:80"
    networks:
      - cooking-network
    depends_on:
      database:
        condition: service_healthy

volumes:
  db_data:

networks:
  cooking-network:
    driver: bridge
